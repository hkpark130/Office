spring:
  profiles:
    active: local

---
server:
  port: 80

constants:
  keycloakUrl: "http://192.168.0.46:8080"
  clientSecret: "fi33bJWZExI0DYTF7IwFZ2xsxfBS2KfK"

# keycloak
spring:
  config:
    activate:
      on-profile: local
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${constants.keycloakUrl}/realms/sso-test
      client:
        provider:
          keycloak:
            issuer-uri: ${constants.keycloakUrl}/realms/sso-test
            user-name-attribute: preferred_username
        registration:
          keycloak:
            provider: keycloak
            client-name: back-office-api
            client-id: back-office-api
            client-secret: ${constants.clientSecret}
            scope: openid,offline_access,profile
            authorization-grant-type: authorization_code
#            redirect-uri: ${constants.keycloakUrl}/login/oauth2/code/external
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    show_sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
  h2:
    console:
      enabled: true
      path: /h2-console

---
server:
  port: 3000

spring:
  config:
    activate:
      on-profile: prod
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL}/realms/sso-test
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_URL}/realms/sso-test
            user-name-attribute: preferred_username
        registration:
          keycloak:
            provider: keycloak
            client-name: back-office-api
            client-id: back-office-api
            client-secret: ${CLIENT_SECRET}
            scope: openid,offline_access,profile
            authorization-grant-type: authorization_code
  datasource:
    url: ${DB_URL}
    driverClassName: org.mariadb.jdbc.Driver
    username: ${DB_USER}
    password: ${DB_PW}
  sql:
    init:
      mode: never
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
