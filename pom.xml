<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>kr.co.direa</groupId>
	<artifactId>office</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>office</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- 이것을 통해서 npm run build 라는 명령어가 실행됩니다. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>npm build the vue app</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>frontend</workingDirectory>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>build</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- copy the vue js app dist folder to spring boot target static folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<!-- 버전 작성 -->
				<version>3.3.1</version>
				<executions>
					<!-- static, template 파일 구분하고 싶지 않다면 executions 태그 내의 -->
					<!-- execution 태그중 바로 아래 있는 것만 주석해제하고 나머지는 다 주석을 걸어줍니다. -->
					<!-- <execution>
                        <id>Copy my Vuejs app into Spring boot target static folder</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/frontend/dist</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <nonFilteredFileExtensions>
                              <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                               <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                               <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                               <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                               <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                        </configuration>
                    </execution>-->

					<!-- 저는 template 파일(servlet 환경의 jsp 라고 생각해면 됩니다)을 따로 copy 합니다. -->
					<execution>
						<id>copy front-end template to target, can use Thymeleaf!</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<outputDirectory>${basedir}/target/classes/templates</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/frontend/dist</directory>
									<includes>
										<include>index.html</include>
									</includes>
								</resource>
							</resources>
							<nonFilteredFileExtensions>
								<!-- fonts. 이거 안하면 폰트 깨짐. -->
								<nonFilteredFileExtension>eot</nonFilteredFileExtension>
								<nonFilteredFileExtension>svg</nonFilteredFileExtension>
								<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
								<nonFilteredFileExtension>woff</nonFilteredFileExtension>
								<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
							</nonFilteredFileExtensions>
						</configuration>
					</execution>

					<!-- 나머지 그냥 static 자원들은 모두 static 에 들어가도록 합니다. -->
					<execution>
						<id>copy front-end assets to target</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<outputDirectory>${basedir}/target/classes/static</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/frontend/dist</directory>
									<excludes>
										<exclude>index.html</exclude>
									</excludes>
								</resource>
							</resources>
							<nonFilteredFileExtensions>
								<!-- fonts. 이거 안하면 폰트 깨짐. -->
								<nonFilteredFileExtension>eot</nonFilteredFileExtension>
								<nonFilteredFileExtension>svg</nonFilteredFileExtension>
								<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
								<nonFilteredFileExtension>woff</nonFilteredFileExtension>
								<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
							</nonFilteredFileExtensions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- index.html 삭제 -->
<!--			<plugin>-->
<!--				<artifactId>maven-clean-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<filesets>-->
<!--						<fileset>-->
<!--							<directory>${basedir}/src/main/resources/static</directory>-->
<!--							<includes>-->
<!--								<include>index.html</include>-->
<!--							</includes>-->
<!--						</fileset>-->
<!--						<fileset>-->
<!--							<directory>${basedir}/src/main/resources/templates</directory>-->
<!--							<includes>-->
<!--								<include>index.html</include>-->
<!--							</includes>-->
<!--						</fileset>-->
<!--					</filesets>-->
<!--				</configuration>-->
<!--			</plugin>-->
		</plugins>
	</build>

</project>
